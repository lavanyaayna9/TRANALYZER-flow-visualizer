# [!!! -------------------------------------------------------------------- !!!]
# [!!! ---------------------- DO NOT EDIT THIS FILE ----------------------- !!!]
# [!!! -------------------------------------------------------------------- !!!]
#
# This is the default configuration for sqliteSink
#
# Apply the configuration as follows:
#     - t2conf sqliteSink --reset
#
# If you want to customize the default configuration, proceed as follows:
#     1. Create 'sqliteSink.config':
#           t2conf sqliteSink -g
#     2. Edit 'sqliteSink.config'
#     3. Apply 'sqliteSink.config':
#           t2conf sqliteSink -C sqliteSink.config
#
# [Format of the file]
#     - Empty lines and lines starting with '%' or '#'â€™ are ignored.
#     - One section starting with '# :name: pluginName" per file.
#     - If no section starting with '# :file: path/to/file.h" is specified,
#       it is assumed the file is src/pluginName.h (relative to plugin folder)
#         - If a configuration element applies to a different file, a file
#           section MUST be used
#         - Filenames are relative to plugin folder, i.e., sqliteSink,
#           e.g., src/sqliteSink.h
#     - A line is composed of the name of a macro (define) in the header file
#       followed by an equal sign and the value to set for the define:
#           NAME = value
#       where value can be anything, including yes (= 1) and no (= 0)
#     - Add a comment before each setting to describe the configuration option
#       and its valid values:
#           # Description of the option [yes / no]
#       or
#           # Description of the option [0 - 255]
#       or
#           # Description of the option:
#           #   0: description of value 0
#           #   1: description of value 1
#           #   2: description of value 2

# ---------------------------------------------------------------------------- #
# :name: sqliteSink                                                            #
# ---------------------------------------------------------------------------- #

# Handling of existing DB:
#   0: abort if table already exists
#   1: overwrite table if it already exists
#   2: append to table if it already exists
SQLITE_OVERWRITE = 2

# Handling of hex numbers (bitfields):
#   0: store hex numbers (bitfields) as text
#   1: store hex numbers (bitfields) as int
SQLITE_HEX_AS_INT = 0

# When to write to the DB [0 - UINT32_MAX]:
#     0: one transaction
#   > 0: one transaction every n flows
SQLITE_TRANSACTION_NFLOWS = 40000

# Initial length for query [0 - SQLITE_QRY_MAXLEN]
SQLITE_QRY_LEN = 32768
#
# Maximal length for query [SQLITE_QRY_LEN - UINT32_MAX]
SQLITE_QRY_MAXLEN = 4194304

# Suffix for the database name
SQLITE_DB_SUFFIX = ".db"

# Name of the database
#SQLITE_DBNAME = "/tmp/t2.db"

# Name of the database flow table
SQLITE_TABLE_NAME = "flow"

# Use SQLITE_SELECT_FILE to only insert specific fields into the DB [yes / no]
T2_SQLITE_SELECT = no

# Filename of the field selector (one column name per line)
SQLITE_SELECT_FILE = "sqlite-columns.txt"

# ---------------------------------------------------------------------------- #
# :from: ../../utils/default.config :import:                                   #
#   - MAC_SEP                                                                  #
#   - B2T_NON_IP_STR                                                           #
#   - HEX_CAPITAL                                                              #
#                                                                              #
# :from: ../../tranalyzer2/default.config :import:                             #
#   - TSTAMP_PREC                                                              #
# ---------------------------------------------------------------------------- #
