#!/usr/bin/env bash

source "$(dirname "$0")/../../../scripts/t2utils.sh"

usage() {
    printf "Usage:\n"
    printf "    $SNAME [OPTION...] -r regfile.txt\n\n"
    printf "Required arguments:\n"
    printf "    -r file     file to convert\n\n"
    printf "Optional arguments:\n"
    printf "    -w name     output filename [$(basename "$OUTFILE")]\n\n"
    printf "    -h          display this help, then exit\n"
}

OUTFILE="$($READLINK -f "$SHOME/../regexfile.txt")"

while [ $# -gt 0 ]; do
    case "$1" in
        -r)
            validate_next_file "$1" "$2"
            INFILE="$($READLINK -f "$2")"
            shift
            ;;
        -w)
            validate_next_arg "$1" "$2"
            OUTFILE="$2"
            shift
            ;;
        -h|-\?|--help)
            usage
            exit 0
            ;;
        *)
            abort_option_unknown "$1"
            ;;
    esac
    shift
done

if [ ! -f "$INFILE" ]; then
    abort_required_file
fi

printinf "Converting '$(basename "$INFILE")' to '$(basename "$OUTFILE")'..."

AWK -F'\t' -v OFS='\t' '
    /^\s*#/ || /^\s*$/ { next }  # skip comments and empty lines
    {
        A[$1] = ++i
        printf "%d\t", $1
        n = split($2, B, ",")
        printf "%d", A[B[1]]
        for (j = 2; j <= n; j++) {
            printf ",%d", A[B[j]]
        }
        for (j = 3; j <= NF; j++) {
            printf "\t%s", $j
        }
        printf "\n"
    }' "$INFILE" > "$OUTFILE"

if [ $? -ne 0 ]; then
    printerr "Failed to convert '$(basename "$INFILE")'"
    exit 1
fi

printok "Conversion successful!"
exit 0
