# [!!! -------------------------------------------------------------------- !!!]
# [!!! ---------------------- DO NOT EDIT THIS FILE ----------------------- !!!]
# [!!! -------------------------------------------------------------------- !!!]
#
# This is the default configuration for tcpFlags
#
# Apply the configuration as follows:
#     - t2conf tcpFlags --reset
#
# If you want to customize the default configuration, proceed as follows:
#     1. Create 'tcpFlags.config':
#           t2conf tcpFlags -g
#     2. Edit 'tcpFlags.config'
#     3. Apply 'tcpFlags.config':
#           t2conf tcpFlags -C tcpFlags.config
#
# [Format of the file]
#     - Empty lines and lines starting with '%' or '#'â€™ are ignored.
#     - One section starting with '# :name: pluginName" per file.
#     - If no section starting with '# :file: path/to/file.h" is specified,
#       it is assumed the file is src/pluginName.h (relative to plugin folder)
#         - If a configuration element applies to a different file, a file
#           section MUST be used
#         - Filenames are relative to plugin folder, i.e., tcpFlags,
#           e.g., src/tcpFlags.h
#     - A line is composed of the name of a macro (define) in the header file
#       followed by an equal sign and the value to set for the define:
#           NAME = value
#       where value can be anything, including yes (= 1) and no (= 0)
#     - Add a comment before each setting to describe the configuration option
#       and its valid values:
#           # Description of the option [yes / no]
#       or
#           # Description of the option [0 - 255]
#       or
#           # Description of the option:
#           #   0: description of value 0
#           #   1: description of value 1
#           #   2: description of value 2

# ---------------------------------------------------------------------------- #
# :name: tcpFlags                                                              #
# ---------------------------------------------------------------------------- #

# Type of Service representation
#   0: IP ToS hex
#   1: DSCP_ECN decimal
#   2: Precedence(1-7)_ECN decimal
IPTOS = 0

# Round trip time estimation [yes / no]
RTT_ESTIMATE = yes

# Checksum calculation:
#   0: No checksum calculation
#   1: Calculation of L3 (IP) header checksum
#   2: Calculation of L3 (IP) and L4 (TCP, UDP) checksum
IPCHECKSUM = 2

# Calculation of TCP window size parameters [yes / no]
WINDOWSIZE = yes

# Minimal window size threshold defining a healthy communication,
# Only packets below the threshold are counted [0 - UINT16_MAX]
WINMIN = 1

# SEQ/ACK number feature analysis [yes / no]
SEQ_ACK_NUM = yes

# Fragmentation analysis [yes / no]
FRAG_ANALYZE = yes

# NAT boot time estimation [yes / no]
NAT_BT_EST = yes

# Scan flow detector [yes / no]
SCAN_DETECTOR = yes

# Dissect Multipath TCP (MPTCP) [yes / no]
MPTCP = yes

# Output JA4T/JA4TS fingerprints [yes / no]
TCPJA4T = yes

# TCP flags counts [yes / no]
TCPFLGCNT = no

# Maximal options stored in flow [1 - 255]
# (require TCPJA4T = yes)
JA4TOPTMX = 20

# SEQ/ACK numbers representation (-s option):
#   0: absolute
#   1: relative
# (require SEQ_ACK_NUM = yes)
SPKTMD_SEQACKREL = 0

# SEQ/ACK numbers representation (-s option):
#   0: uint32_t
#   1: hex32
# (require SEQ_ACK_NUM = yes)
SPKTMD_SEQACKHEX = 0
