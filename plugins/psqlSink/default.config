# [!!! -------------------------------------------------------------------- !!!]
# [!!! ---------------------- DO NOT EDIT THIS FILE ----------------------- !!!]
# [!!! -------------------------------------------------------------------- !!!]
#
# This is the default configuration for psqlSink
#
# Apply the configuration as follows:
#     - t2conf psqlSink --reset
#
# If you want to customize the default configuration, proceed as follows:
#     1. Create 'psqlSink.config':
#           t2conf psqlSink -g
#     2. Edit 'psqlSink.config'
#     3. Apply 'psqlSink.config':
#           t2conf psqlSink -C psqlSink.config
#
# [Format of the file]
#     - Empty lines and lines starting with '%' or '#'â€™ are ignored.
#     - One section starting with '# :name: pluginName" per file.
#     - If no section starting with '# :file: path/to/file.h" is specified,
#       it is assumed the file is src/pluginName.h (relative to plugin folder)
#         - If a configuration element applies to a different file, a file
#           section MUST be used
#         - Filenames are relative to plugin folder, i.e., psqlSink,
#           e.g., src/psqlSink.h
#     - A line is composed of the name of a macro (define) in the header file
#       followed by an equal sign and the value to set for the define:
#           NAME = value
#       where value can be anything, including yes (= 1) and no (= 0)
#     - Add a comment before each setting to describe the configuration option
#       and its valid values:
#           # Description of the option [yes / no]
#       or
#           # Description of the option [0 - 255]
#       or
#           # Description of the option:
#           #   0: description of value 0
#           #   1: description of value 1
#           #   2: description of value 2

# ---------------------------------------------------------------------------- #
# :name: psqlSink                                                              #
# ---------------------------------------------------------------------------- #

# Handling of existing DB:
#   0: abort if DB already exists
#   1: overwrite DB if it already exists
#   2: reuse DB if it already exists
PSQL_OVERWRITE_DB = 2

# Handling of existing table:
#   0: abort if table already exists
#   1: overwrite table if it already exists
#   2: append to table if it already exists
PSQL_OVERWRITE_TABLE = 2

# When to write to the DB [0 - UINT32_MAX]:
#     0: one transaction
#   > 0: one transaction every n flows
PSQL_TRANSACTION_NFLOWS = 40000

# Max length for query [0 - UINT16_MAX]
PSQL_QRY_LEN = 32768

# Address of the database
PSQL_HOST = "127.0.0.1"

# Port of the database [1 - UINT16_MAX]
PSQL_PORT = 5432

# Username to connect to DB
PSQL_USER = "postgres"

# Password to connect to DB
PSQL_PASS = "postgres"

# Name of the database
PSQL_DBNAME = "tranalyzer"

# Name of the database flow table
PSQL_TABLE_NAME = "flow"

# Use PSQL_SELECT_FILE to only insert specific fields into the DB [yes / no]
PSQL_SELECT = no

# Filename of the field selector (one column name per line)
PSQL_SELECT_FILE = "psql-columns.txt"

# ---------------------------------------------------------------------------- #
# :from: ../../utils/default.config :import:                                   #
#   - IP4_FORMAT                                                               #
#   - IP6_FORMAT                                                               #
#   - MAC_FORMAT                                                               #
#   - MAC_SEP                                                                  #
#   - HEX_CAPITAL                                                              #
#                                                                              #
# :from: ../../tranalyzer2/default.config :import:                             #
#   - TSTAMP_PREC                                                              #
# ---------------------------------------------------------------------------- #
