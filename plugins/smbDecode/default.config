# [!!! -------------------------------------------------------------------- !!!]
# [!!! ---------------------- DO NOT EDIT THIS FILE ----------------------- !!!]
# [!!! -------------------------------------------------------------------- !!!]
#
# This is the default configuration for smbDecode
#
# Apply the configuration as follows:
#     - t2conf smbDecode --reset
#
# If you want to customize the default configuration, proceed as follows:
#     1. Create 'smbDecode.config':
#           t2conf smbDecode -g
#     2. Edit 'smbDecode.config'
#     3. Apply 'smbDecode.config':
#           t2conf smbDecode -C smbDecode.config
#
# [Format of the file]
#     - Empty lines and lines starting with '%' or '#'â€™ are ignored.
#     - One section starting with '# :name: pluginName" per file.
#     - If no section starting with '# :file: path/to/file.h" is specified,
#       it is assumed the file is src/pluginName.h (relative to plugin folder)
#         - If a configuration element applies to a different file, a file
#           section MUST be used
#         - Filenames are relative to plugin folder, i.e., smbDecode,
#           e.g., src/smbDecode.h
#     - A line is composed of the name of a macro (define) in the header file
#       followed by an equal sign and the value to set for the define:
#           NAME = value
#       where value can be anything, including yes (= 1) and no (= 0)
#     - Add a comment before each setting to describe the configuration option
#       and its valid values:
#           # Description of the option [yes / no]
#       or
#           # Description of the option [0 - 255]
#       or
#           # Description of the option:
#           #   0: description of value 0
#           #   1: description of value 1
#           #   2: description of value 2

# ---------------------------------------------------------------------------- #
# :name: smbDecode                                                             #
# ---------------------------------------------------------------------------- #

# Decode SMB1 (experimental) [yes / no]
SMB1_DECODE = yes

# Decode security blob (experimental) [yes / no]
SMB_SECBLOB = yes

# Number of SMB2 dialects to store [0 - 255]
SMB2_NUM_DIALECT = 3

# Number of unique SMB2 header status to store [0 - 255]
SMB2_NUM_STAT = 18

# Number of SMB1 dialects to store [0 - 255]
# (require SMB1_DECODE = yes)
SMB1_NUM_DIALECT = 20

# Maximum length for SMB1 dialects [0 - 255]
# (require SMB1_DECODE = yes)
SMB1_DIAL_MAXLEN = 32

# Number of unique filenames to store in the flow file [0 - 255]
SMB_NUM_FNAME = 5

# Max length for Native OS and LAN Manager [0 - 255]
SMB_NATIVE_NAME_LEN = 64

# Save files (SMB1, experimental) [yes / no]
# (require SMB1_DECODE = yes)
SMB1_SAVE_DATA = no

# Save files (SMB2) [yes / no]
SMB2_SAVE_DATA = no

# Save NTLM authentications [yes / no]
SMB_SAVE_AUTH = no

# File where to store NTLM authentications
SMB_AUTH_FILE = "smb_auth.txt"

# Folder for saved data
SMB_SAVE_DIR = "/tmp/TranSMB/"

# File where to store the mapping between file ID and filename
# (require SMB1_SAVE_DATA = yes or SMB2_SAVE_DATA = yes)
SMB_MAP_FILE = "smb_filenames.txt"

# Prefix for output files
# (require SMB1_SAVE_DATA = yes or SMB2_SAVE_DATA = yes)
SMB_FILE_ID = "File_Id_"

# Remove SMB_SAVE_DIR before starting [yes / no]
# (require SMB1_SAVE_DATA = yes or SMB2_SAVE_DATA = yes)
SMB_RM_DATADIR = yes

# Maximum length for filenames [0 - UINT16_MAX]
SMB_FNAME_LEN = 512

# Behavior when data to copy is bigger than buffer:
#   T2_STRCPY_EXIT: exit
#   T2_STRCPY_EMPTY: return an empty buffer ("abcdefg" -> "")
#   T2_STRCPY_TRUNC: truncate destination ("abcdefg" -> \"abcdef")
#   T2_STRCPY_ELLIPSIS: truncate dest. with an ellipsis ("abcdefg" -> "abc...")
SMB_STRCPY_BEHAVIOR = T2_STRCPY_TRUNC
